name: Build_Kivy_APK

on:
  workflow_dispatch:  # manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 🧱 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git zip unzip openjdk-17-jdk ant python3-pip \
            libgl1-mesa-dev libgles2-mesa-dev liblzma-dev zlib1g-dev \
            libffi-dev libssl-dev libjpeg-dev libfreetype6-dev autoconf \
            automake cmake pkg-config wget

      - name: 📦 Install Buildozer & Python dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer Cython virtualenv

      - name: 💾 Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ~/android-sdk
          key: ${{ runner.os }}-android-sdk-v1

      - name: 📱 Install Android SDK + NDK + Licenses
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          cd "$ANDROID_HOME/cmdline-tools"
          if [ ! -d "latest" ]; then
            wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
            unzip -q cmdline-tools.zip
            mv cmdline-tools latest
          fi
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

          # Accept all licenses
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses || true
          
          # Install required packages
          yes | sdkmanager --sdk_root=$ANDROID_HOME \
            "platform-tools" \
            "platforms;android-30" \
            "build-tools;30.0.3" \
            "ndk;27.0.12077973"

      - name: 🪄 Link SDK into Buildozer path
        run: |
          mkdir -p ~/.buildozer/android/platform
          ln -sf /home/runner/android-sdk ~/.buildozer/android/platform/android-sdk
          ln -sf /home/runner/android-sdk/ndk/27.0.12077973 ~/.buildozer/android/platform/android-ndk

      - name: 🔧 Ensure buildozer.spec is configured for Ant
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          sed -i 's/^android.build_type =.*/android.build_type = ant/' buildozer.spec
          grep -q "android.sdk_path" buildozer.spec || echo "android.sdk_path = /home/runner/android-sdk" >> buildozer.spec
          grep -q "android.ndk_path" buildozer.spec || echo "android.ndk_path = /home/runner/android-sdk/ndk/27.0.12077973" >> buildozer.spec
          grep -q "android.accept_sdk_license" buildozer.spec || echo "android.accept_sdk_license = True" >> buildozer.spec
          grep -q "android.skip_update" buildozer.spec || echo "android.skip_update = True" >> buildozer.spec

      - name: 🏗️ Build APK with Ant
        env:
          ANDROIDSDK: /home/runner/android-sdk
          ANDROIDNDK: /home/runner/android-sdk/ndk/27.0.12077973
          ANDROID_HOME: /home/runner/android-sdk
          ANDROID_SDK_ROOT: /home/runner/android-sdk
        run: |
          buildozer android debug

      - name: 📤 Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: kivy-app-ant-apk
          path: bin/*.apk
